"use strict";
var _ = require("lodash");
var React = require("react");

var RadioGroup = require("react-radio-group");

var QuestorList = require("../shared/questor-list");

module.exports = React.createClass({
  render: function () {
    var filteredQuestors = this.props.questors;

    if (this.props.affinity && this.props.affinity !== "all") {
      filteredQuestors = _.where(filteredQuestors, { affinity: this.props.affinity });
    }

    if (this.props.rarity && this.props.rarity !== "0") {
      filteredQuestors = _.where(filteredQuestors, { rarity: this.props.rarity });
    }

    if (this.props.origin && this.props.origin !== "all") {
      // TODO: Determine why decodeURI is necessary on reload but not a clicked link
      filteredQuestors = _.where(filteredQuestors, { origin: decodeURI(this.props.origin) });
    }

    return (
      React.DOM.div(null,
        RadioGroup({
          name: "affinity",
          value: this.props.affinity,
          ref: "affinityGroup",
          onChange: this.handleChange
        },
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "all" }), "All"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "none" }), "None"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "nature" }), "Nature"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "metal" }), "Metal"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "spirit" }), "Spirit"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "fire" }), "Fire"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "ice" }), "Ice")
        ),
        RadioGroup({
          name: "rarity",
          value: this.props.rarity,
          ref: "rarityGroup",
          onChange: this.handleChange
        },
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "0" }), "All"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "1" }), "★"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "2" }), "★★"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "3" }), "★★★"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "4" }), "★★★★")
        ),
        RadioGroup({
          name: "origin",
          value: this.props.origin,
          ref: "originGroup",
          onChange: this.handleChange
        },
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "all" }), "All"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "Qapellium" }), "Qapellium"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "The Quagmire" }), "The Quagmire"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "Quakelands" }), "Quakelands"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "Qin Kingdom" }), "Qin Kingdom"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "Qold Qountry" }), "Qold Qountry"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "Qolosseum" }), "Qolosseum"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "Volqano" }), "Volqano"),
          React.DOM.label(null, React.DOM.input({ type: "radio", value: "Mystery" }), "Mystery")
        ),

        QuestorList({ questors: filteredQuestors })
      )
    );
  },
  handleChange: function () {
    this.props.onUpdate(
      this.refs.affinityGroup.getCheckedValue(),
      this.refs.rarityGroup.getCheckedValue(),
      this.refs.originGroup.getCheckedValue()
    );
  }
});
